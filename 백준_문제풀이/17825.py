order = list(map(int, input().split()))
candi = []
temp = []
def make_candi(depth):
    if depth == 10:
        candi.append(list(temp))
        return
    for i in range(1, 5):
        temp.append(i)
        make_candi(depth + 1)
        temp.pop()

make_candi(0)
# 0 1 2 3 4 5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 => 순서
# 0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 13 16 19 25 22 24 28 27 26 30 35 도착 => 점수
board_move = {
    0 : [1, 2, 3, 4, 5],
    1 : [2, 3, 4, 5, 6],
    2 : [3, 4, 5, 6, 7],
    3 : [4, 5, 6, 7, 8],
    4 : [5, 6, 7, 8, 9],
    5 : [21, 22, 23, 24, 30],
    6 : [7,8,9,10,11],
    7 : [8,9,10,11,12],
    8 : [9,10,11,12,13],
    9 : [10,11,12,13,14],
    10 : [25, 26, 24, 30, 31],
    11 : [12,13,14,15,16],
    12 : [13,14,15,16,17],
    13 : [14,15,16,17,18],
    14 : [15,16,17,18,19],
    15 : [27,28,29,24,30],
    16 : [17,18,19,20,32],
    17 : [18,19,20,32,32],
    18 : [19,20,32,32,32],
    19 : [20,32,32,32,32],
    20 : [32,32,32,32,32],
    21 : [22,23,24,30,31],
    22 : [23,24,30,31,20],
    23 : [24,30,31,20,32],
    24 : [30,31,20,32,32],
    25 : [26,24,30,31,20],
    26 : [24,30,31,20,32],
    27 : [28,29,24,30,31],
    28 : [29,24,30,31,20],
    29 : [24,30,31,20,32],
    30 : [31,20,32,32,32],
    31 : [20,32,32,32,32],
    32 : [32,32,32,32,32] # 이건 고르지 못하게 해야함
}
board_score = [0, 2, 4, 6, 8, 10, 12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,13,16,19,25,22,24,28,27,26,30,35,0]

# order의 순서대로 이동하면 됨
MAX = -1
def count(arr):
    global MAX
    result = 0 # 몇점이 나오는지 구함
    pos = [0, 0, 0, 0, 0] # 4개의 말 존재
    for j in range(10): # 열번 움직임
        horse_cnt = order[j] # 칸을 이동하는 값
        horse_pos = arr[j] # 이 말이 이동해야함
        pos[horse_pos] = board_move[pos[horse_pos]][horse_cnt - 1] # 말이 여기로 이동을 하고
        for k in range(1, 5):
            if horse_pos == k: # 같은말 제외하고
                continue
            if pos[horse_pos] < 32 and pos[k] == pos[horse_pos]: # 그 위치에 이미 다른말이 있으면 제외
                return False
        result += board_score[pos[horse_pos]] # 점수를 더해줌
    return result

for i in range(len(candi)):
    answer = count(candi[i])
    if answer:
        MAX = max(MAX, answer)
print(MAX)